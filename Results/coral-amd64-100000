==========================================================
Thu Aug 29 12:32:55 CDT 2024
==========================================================
FreeBSD coral.acadix.biz 14.0-RELEASE-p9 FreeBSD 14.0-RELEASE-p9 #0: Tue Aug  6 19:52:06 UTC 2024     root@amd64-builder.daemonology.net:/usr/obj/usr/src/amd64.amd64/sys/GENERIC amd64
==========================================================
CPU: Intel(R) Core(TM) i5-3470T CPU @ 2.90GHz (2893.52-MHz K8-class CPU)
FreeBSD/SMP: Multiprocessor System Detected: 4 CPUs
cpu0: <ACPI CPU> on acpi0
==========================================================
Generating input file of 100000 numbers...
==========================================================
clang version 18.1.8
Target: x86_64-portbld-freebsd14.0
Thread model: posix
InstalledDir: /usr/local/llvm18/bin
==========================================================
gcc14 (FreeBSD Ports Collection) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

==========================================================
openjdk version "1.8.0_422"
OpenJDK Runtime Environment (build 1.8.0_422-b05)
OpenJDK 64-Bit Server VM (build 25.422-b05, mixed mode)
==========================================================

Compiling programs...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, int...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, long...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, float...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, double...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, int...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, long...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, float...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, double...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, int...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, long...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, float...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, double...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, int...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, long...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, float...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, double...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, int...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, long...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, float...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, double...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, int...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, long...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, float...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, double...
Compiling with gfortran14 -O2 -funroll-loops -march=native, integer...
Compiling with gfortran14 -O2 -funroll-loops -march=native, real...
Compiling with gfortran14 -O2 -funroll-loops -march=native, real(8)...
/usr/local/bin/ldc2
Compiling with ldc2...
LDC - the LLVM D compiler (1.39.0):
  based on DMD v2.109.1 and LLVM 15.0.7
  built with LDC - the LLVM D compiler (1.39.0)
  Default target: x86_64-portbld-freebsd14.0
  Host CPU: ivybridge
  http://dlang.org - http://wiki.dlang.org/LDC

  Registered Targets:
    aarch64    - AArch64 (little endian)
    aarch64_32 - AArch64 (little endian ILP32)
    aarch64_be - AArch64 (big endian)
    amdgcn     - AMD GCN GPUs
    arm        - ARM
    arm64      - ARM64 (little endian)
    arm64_32   - ARM64 (little endian ILP32)
    armeb      - ARM (big endian)
    avr        - Atmel AVR Microcontroller
    bpf        - BPF (host endian)
    bpfeb      - BPF (big endian)
    bpfel      - BPF (little endian)
    hexagon    - Hexagon
    lanai      - Lanai
    mips       - MIPS (32-bit big endian)
    mips64     - MIPS (64-bit big endian)
    mips64el   - MIPS (64-bit little endian)
    mipsel     - MIPS (32-bit little endian)
    msp430     - MSP430 [experimental]
    nvptx      - NVIDIA PTX 32-bit
    nvptx64    - NVIDIA PTX 64-bit
    ppc32      - PowerPC 32
    ppc32le    - PowerPC 32 LE
    ppc64      - PowerPC 64
    ppc64le    - PowerPC 64 LE
    r600       - AMD GPUs HD2XXX-HD6XXX
    riscv32    - 32-bit RISC-V
    riscv64    - 64-bit RISC-V
    sparc      - Sparc
    sparcel    - Sparc LE
    sparcv9    - Sparc V9
    systemz    - SystemZ
    thumb      - Thumb
    thumbeb    - Thumb (big endian)
    ve         - VE
    wasm32     - WebAssembly 32-bit
    wasm64     - WebAssembly 64-bit
    x86        - 32-bit X86: Pentium-Pro and above
    x86-64     - 64-bit X86: EM64T and AMD64
    xcore      - XCore
/usr/local/bin/fpc
Compiling with fpc...
3.2.3
Free Pascal Compiler version 3.2.3 [2024/08/08] for x86_64
Copyright (c) 1993-2024 by Florian Klaempfl and others
Target OS: FreeBSD for x86-64
Compiling selsort.pas
Linking selsort-pas
/usr/local/bin/ld.bfd: warning: /usr/local/lib/fpc/3.2.3/units/x86_64-freebsd/rtl/prt0.o: missing .note.GNU-stack section implies executable stack
/usr/local/bin/ld.bfd: NOTE: This behaviour is deprecated and will be removed in a future version of the linker
70 lines compiled, 0.1 sec
/usr/local/bin/rustc
Compiling with Rust...
rustc 1.80.1 (3f5fd8dd4 2024-08-06) (built from a source tarball)
/usr/local/bin/go
Compiling with go...
go version go1.21.13 freebsd/amd64
Compiling with /usr/local/openjdk11/bin/javac...
==========================================================

Sorting with Unix sort command...
User time = 0.14 seconds (.00233 minutes) (.00003 hours).
RSS = 15528 KB

Sorting int array with clang18 and subscripts...
User time = 4.68 seconds (.07800 minutes) (.00130 hours).
RSS = 2844 KB

Sorting long array with clang18 and subscripts...
User time = 4.65 seconds (.07750 minutes) (.00129 hours).
RSS = 3240 KB

Sorting float array with clang18 and subscripts...
User time = 4.65 seconds (.07750 minutes) (.00129 hours).
RSS = 2848 KB

Sorting double array with clang18 and subscripts...
User time = 4.65 seconds (.07750 minutes) (.00129 hours).
RSS = 3240 KB

Sorting int array with clang18 and pointers...
User time = 4.68 seconds (.07800 minutes) (.00130 hours).
RSS = 2848 KB

Sorting long array with clang18 and pointers...
User time = 4.73 seconds (.07883 minutes) (.00131 hours).
RSS = 3244 KB

Sorting float array with clang18 and pointers...
User time = 6.22 seconds (.10366 minutes) (.00172 hours).
RSS = 2848 KB

Sorting double array with clang18 and pointers...
User time = 6.21 seconds (.10350 minutes) (.00172 hours).
RSS = 3244 KB

Sorting int array with gcc14 and subscripts...
User time = 2.50 seconds (.04166 minutes) (.00069 hours).
RSS = 2840 KB

Sorting long array with gcc14 and subscripts...
User time = 2.80 seconds (.04666 minutes) (.00077 hours).
RSS = 3236 KB

Sorting float array with gcc14 and subscripts...
User time = 4.28 seconds (.07133 minutes) (.00118 hours).
RSS = 2844 KB

Sorting double array with gcc14 and subscripts...
User time = 4.26 seconds (.07100 minutes) (.00118 hours).
RSS = 3228 KB

Sorting int array with gcc14 and pointers...
User time = 1.77 seconds (.02950 minutes) (.00049 hours).
RSS = 2844 KB

Sorting long array with gcc14 and pointers...
User time = 1.84 seconds (.03066 minutes) (.00051 hours).
RSS = 3232 KB

Sorting float array with gcc14 and pointers...
User time = 5.30 seconds (.08833 minutes) (.00147 hours).
RSS = 2844 KB

Sorting double array with gcc14 and pointers...
User time = 5.20 seconds (.08666 minutes) (.00144 hours).
RSS = 3232 KB

Sorting int array with clang++18 and subscripts...
User time = 4.81 seconds (.08016 minutes) (.00133 hours).
RSS = 4192 KB

Sorting long array with clang++18 and subscripts...
User time = 2.21 seconds (.03683 minutes) (.00061 hours).
RSS = 4584 KB

Sorting float array with clang++18 and subscripts...
User time = 5.07 seconds (.08450 minutes) (.00140 hours).
RSS = 4192 KB

Sorting double array with clang++18 and subscripts...
User time = 4.89 seconds (.08150 minutes) (.00135 hours).
RSS = 4580 KB

Sorting int array with clang++18 and pointers...
User time = 4.84 seconds (.08066 minutes) (.00134 hours).
RSS = 4196 KB

Sorting long array with clang++18 and pointers...
User time = 4.86 seconds (.08100 minutes) (.00135 hours).
RSS = 4584 KB

Sorting float array with clang++18 and pointers...
User time = 6.31 seconds (.10516 minutes) (.00175 hours).
RSS = 4196 KB

Sorting double array with clang++18 and pointers...
User time = 6.25 seconds (.10416 minutes) (.00173 hours).
RSS = 4576 KB

Sorting int array with clang++18 and vectors...
User time = 4.74 seconds (.07900 minutes) (.00131 hours).
RSS = 4200 KB

Sorting long array with clang++18 and vectors...
User time = 2.21 seconds (.03683 minutes) (.00061 hours).
RSS = 4584 KB

Sorting float array with clang++18 and vectors...
User time = 4.77 seconds (.07950 minutes) (.00132 hours).
RSS = 4204 KB

Sorting double array with clang++18 and vectors...
User time = 4.74 seconds (.07900 minutes) (.00131 hours).
RSS = 4584 KB

Sorting int array with g++14 and subscripts...
User time = 4.47 seconds (.07450 minutes) (.00124 hours).
RSS = 4748 KB

Sorting long array with g++14 and subscripts...
User time = 4.47 seconds (.07450 minutes) (.00124 hours).
RSS = 5200 KB

Sorting float array with g++14 and subscripts...
User time = 4.32 seconds (.07200 minutes) (.00120 hours).
RSS = 4884 KB

Sorting double array with g++14 and subscripts...
User time = 4.34 seconds (.07233 minutes) (.00120 hours).
RSS = 5276 KB

Sorting int array with g++14 and pointers...
User time = 4.30 seconds (.07166 minutes) (.00119 hours).
RSS = 4876 KB

Sorting long array with g++14 and pointers...
User time = 4.30 seconds (.07166 minutes) (.00119 hours).
RSS = 5264 KB

Sorting float array with g++14 and pointers...
User time = 5.45 seconds (.09083 minutes) (.00151 hours).
RSS = 4888 KB

Sorting double array with g++14 and pointers...
User time = 5.46 seconds (.09100 minutes) (.00151 hours).
RSS = 5272 KB

Sorting int array with g++14 and vectors...
User time = 4.28 seconds (.07133 minutes) (.00118 hours).
RSS = 4888 KB

Sorting long array with g++14 and vectors...
User time = 2.70 seconds (.04500 minutes) (.00075 hours).
RSS = 5272 KB

Sorting float array with g++14 and vectors...
User time = 4.51 seconds (.07516 minutes) (.00125 hours).
RSS = 4884 KB

Sorting double array with g++14 and vectors...
User time = 4.50 seconds (.07500 minutes) (.00125 hours).
RSS = 5276 KB

Sorting integer array with gfortran14 and subscripts...
User time = 5.02 seconds (.08366 minutes) (.00139 hours).
RSS = 6788 KB

Sorting real array with gfortran14 and subscripts...
User time = 4.98 seconds (.08300 minutes) (.00138 hours).
RSS = 6796 KB

Sorting real(8) array with gfortran14 and subscripts...
User time = 5.01 seconds (.08350 minutes) (.00139 hours).
RSS = 7188 KB

Sorting int array Pascal...
User time = 10.81 seconds (.18016 minutes) (.00300 hours).
RSS = 1840 KB

Sorting longint array with Pascal...
User time = 10.82 seconds (.18033 minutes) (.00300 hours).
RSS = 1840 KB

Sorting int array D...
User time = 7.67 seconds (.12783 minutes) (.00213 hours).
RSS = 5816 KB

Sorting i32 vector with Rust...
User time = 6.31 seconds (.10516 minutes) (.00175 hours).
RSS = 3552 KB

Sorting with Go...
User time = 8.13 seconds (.13550 minutes) (.00225 hours).
RSS = 10212 KB

Sorting with Python+numba...
User time = 12.27 seconds (.20450 minutes) (.00340 hours).
RSS = 192488 KB

Sorting with vectorized Python extrapolated...
User time = 174.50000 seconds (2.90833 minutes) (.04847 hours).
RSS = 11720 KB

Sorting with Python explicit loops extrapolated...
User time = 313.25000 seconds (5.22083 minutes) (.08701 hours).
RSS = 11600 KB
/usr/local/bin/perl

Sorting with vectorized Perl extrapolated...
User time = 519.25000 seconds (8.65416 minutes) (.14423 hours).
RSS = 9660 KB

Sorting with Perl explicit loops extrapolated...
User time = 630.25000 seconds (10.50416 minutes) (.17506 hours).
RSS = 8300 KB
/usr/local/bin/R

Sorting with vectorized R...
User time = 26.12 seconds (.43533 minutes) (.00725 hours).
RSS = 192624 KB

Sorting with R explicit loops extrapolated...
User time = 649.50000 seconds (10.82500 minutes) (.18041 hours).
RSS = 78252 KB
/usr/local/bin/octave

Sorting with vectorized Octave...
User time = 10.89 seconds (.18150 minutes) (.00302 hours).
RSS = 113308 KB

Sorting with Octave explicit loops extrapolated...
User time = 16088.00000 seconds (268.13333 minutes) (4.46888 hours).
RSS = 111400 KB
