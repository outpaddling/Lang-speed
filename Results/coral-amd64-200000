==========================================================
Thu Aug 29 12:45:15 CDT 2024
==========================================================
FreeBSD coral.acadix.biz 14.0-RELEASE-p9 FreeBSD 14.0-RELEASE-p9 #0: Tue Aug  6 19:52:06 UTC 2024     root@amd64-builder.daemonology.net:/usr/obj/usr/src/amd64.amd64/sys/GENERIC amd64
==========================================================
CPU: Intel(R) Core(TM) i5-3470T CPU @ 2.90GHz (2893.52-MHz K8-class CPU)
FreeBSD/SMP: Multiprocessor System Detected: 4 CPUs
cpu0: <ACPI CPU> on acpi0
==========================================================
Generating input file of 200000 numbers...
==========================================================
clang version 18.1.8
Target: x86_64-portbld-freebsd14.0
Thread model: posix
InstalledDir: /usr/local/llvm18/bin
==========================================================
gcc14 (FreeBSD Ports Collection) 14.2.0
Copyright (C) 2024 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

==========================================================
openjdk version "1.8.0_422"
OpenJDK Runtime Environment (build 1.8.0_422-b05)
OpenJDK 64-Bit Server VM (build 25.422-b05, mixed mode)
==========================================================

Compiling programs...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with clang18 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, int...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, long...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, float...
Compiling with clang18 -O2 -funroll-loops -march=native, pointers, double...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with gcc14 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, int...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, long...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, float...
Compiling with gcc14 -O2 -funroll-loops -march=native, pointers, double...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with clang++18 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, int...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, long...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, float...
Compiling with clang++18 -O2 -funroll-loops -march=native, pointers, double...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, int...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, long...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, float...
Compiling with clang++18 -O2 -funroll-loops -march=native, vectors, double...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, int...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, long...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, float...
Compiling with g++14 -O2 -funroll-loops -march=native, subscripts, double...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, int...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, long...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, float...
Compiling with g++14 -O2 -funroll-loops -march=native, pointers, double...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, int...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, long...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, float...
Compiling with g++14 -O2 -funroll-loops -march=native, vectors, double...
Compiling with gfortran14 -O2 -funroll-loops -march=native, integer...
Compiling with gfortran14 -O2 -funroll-loops -march=native, real...
Compiling with gfortran14 -O2 -funroll-loops -march=native, real(8)...
/usr/local/bin/ldc2
Compiling with ldc2...
LDC - the LLVM D compiler (1.39.0):
  based on DMD v2.109.1 and LLVM 15.0.7
  built with LDC - the LLVM D compiler (1.39.0)
  Default target: x86_64-portbld-freebsd14.0
  Host CPU: ivybridge
  http://dlang.org - http://wiki.dlang.org/LDC

  Registered Targets:
    aarch64    - AArch64 (little endian)
    aarch64_32 - AArch64 (little endian ILP32)
    aarch64_be - AArch64 (big endian)
    amdgcn     - AMD GCN GPUs
    arm        - ARM
    arm64      - ARM64 (little endian)
    arm64_32   - ARM64 (little endian ILP32)
    armeb      - ARM (big endian)
    avr        - Atmel AVR Microcontroller
    bpf        - BPF (host endian)
    bpfeb      - BPF (big endian)
    bpfel      - BPF (little endian)
    hexagon    - Hexagon
    lanai      - Lanai
    mips       - MIPS (32-bit big endian)
    mips64     - MIPS (64-bit big endian)
    mips64el   - MIPS (64-bit little endian)
    mipsel     - MIPS (32-bit little endian)
    msp430     - MSP430 [experimental]
    nvptx      - NVIDIA PTX 32-bit
    nvptx64    - NVIDIA PTX 64-bit
    ppc32      - PowerPC 32
    ppc32le    - PowerPC 32 LE
    ppc64      - PowerPC 64
    ppc64le    - PowerPC 64 LE
    r600       - AMD GPUs HD2XXX-HD6XXX
    riscv32    - 32-bit RISC-V
    riscv64    - 64-bit RISC-V
    sparc      - Sparc
    sparcel    - Sparc LE
    sparcv9    - Sparc V9
    systemz    - SystemZ
    thumb      - Thumb
    thumbeb    - Thumb (big endian)
    ve         - VE
    wasm32     - WebAssembly 32-bit
    wasm64     - WebAssembly 64-bit
    x86        - 32-bit X86: Pentium-Pro and above
    x86-64     - 64-bit X86: EM64T and AMD64
    xcore      - XCore
/usr/local/bin/fpc
Compiling with fpc...
3.2.3
Free Pascal Compiler version 3.2.3 [2024/08/08] for x86_64
Copyright (c) 1993-2024 by Florian Klaempfl and others
Target OS: FreeBSD for x86-64
Compiling selsort.pas
Linking selsort-pas
/usr/local/bin/ld.bfd: warning: /usr/local/lib/fpc/3.2.3/units/x86_64-freebsd/rtl/prt0.o: missing .note.GNU-stack section implies executable stack
/usr/local/bin/ld.bfd: NOTE: This behaviour is deprecated and will be removed in a future version of the linker
70 lines compiled, 0.1 sec
/usr/local/bin/rustc
Compiling with Rust...
rustc 1.80.1 (3f5fd8dd4 2024-08-06) (built from a source tarball)
/usr/local/bin/go
Compiling with go...
go version go1.21.13 freebsd/amd64
Compiling with /usr/local/openjdk11/bin/javac...
==========================================================

Sorting with Unix sort command...
User time = 0.34 seconds (.00566 minutes) (.00009 hours).
RSS = 32280 KB

Sorting int array with clang18 and subscripts...
User time = 18.60 seconds (.31000 minutes) (.00516 hours).
RSS = 3240 KB

Sorting long array with clang18 and subscripts...
User time = 18.57 seconds (.30950 minutes) (.00515 hours).
RSS = 4020 KB

Sorting float array with clang18 and subscripts...
User time = 19.58 seconds (.32633 minutes) (.00543 hours).
RSS = 3236 KB

Sorting double array with clang18 and subscripts...
User time = 18.37 seconds (.30616 minutes) (.00510 hours).
RSS = 4024 KB

Sorting int array with clang18 and pointers...
User time = 18.65 seconds (.31083 minutes) (.00518 hours).
RSS = 3236 KB

Sorting long array with clang18 and pointers...
User time = 18.70 seconds (.31166 minutes) (.00519 hours).
RSS = 4016 KB

Sorting float array with clang18 and pointers...
User time = 24.41 seconds (.40683 minutes) (.00678 hours).
RSS = 3244 KB

Sorting double array with clang18 and pointers...
User time = 24.39 seconds (.40650 minutes) (.00677 hours).
RSS = 4016 KB

Sorting int array with gcc14 and subscripts...
User time = 9.86 seconds (.16433 minutes) (.00273 hours).
RSS = 3232 KB

Sorting long array with gcc14 and subscripts...
User time = 11.63 seconds (.19383 minutes) (.00323 hours).
RSS = 4016 KB

Sorting float array with gcc14 and subscripts...
User time = 17.40 seconds (.29000 minutes) (.00483 hours).
RSS = 3228 KB

Sorting double array with gcc14 and subscripts...
User time = 16.82 seconds (.28033 minutes) (.00467 hours).
RSS = 4012 KB

Sorting int array with gcc14 and pointers...
User time = 6.95 seconds (.11583 minutes) (.00193 hours).
RSS = 3236 KB

Sorting long array with gcc14 and pointers...
User time = 7.17 seconds (.11950 minutes) (.00199 hours).
RSS = 4016 KB

Sorting float array with gcc14 and pointers...
User time = 20.72 seconds (.34533 minutes) (.00575 hours).
RSS = 3236 KB

Sorting double array with gcc14 and pointers...
User time = 20.69 seconds (.34483 minutes) (.00574 hours).
RSS = 4016 KB

Sorting int array with clang++18 and subscripts...
User time = 18.59 seconds (.30983 minutes) (.00516 hours).
RSS = 4584 KB

Sorting long array with clang++18 and subscripts...
User time = 8.51 seconds (.14183 minutes) (.00236 hours).
RSS = 5364 KB

Sorting float array with clang++18 and subscripts...
User time = 18.66 seconds (.31100 minutes) (.00518 hours).
RSS = 4592 KB

Sorting double array with clang++18 and subscripts...
User time = 18.66 seconds (.31100 minutes) (.00518 hours).
RSS = 5352 KB

Sorting int array with clang++18 and pointers...
User time = 18.92 seconds (.31533 minutes) (.00525 hours).
RSS = 4580 KB

Sorting long array with clang++18 and pointers...
User time = 18.94 seconds (.31566 minutes) (.00526 hours).
RSS = 5360 KB

Sorting float array with clang++18 and pointers...
User time = 24.68 seconds (.41133 minutes) (.00685 hours).
RSS = 4576 KB

Sorting double array with clang++18 and pointers...
User time = 24.67 seconds (.41116 minutes) (.00685 hours).
RSS = 5368 KB

Sorting int array with clang++18 and vectors...
User time = 18.59 seconds (.30983 minutes) (.00516 hours).
RSS = 4584 KB

Sorting long array with clang++18 and vectors...
User time = 8.50 seconds (.14166 minutes) (.00236 hours).
RSS = 5364 KB

Sorting float array with clang++18 and vectors...
User time = 18.65 seconds (.31083 minutes) (.00518 hours).
RSS = 4584 KB

Sorting double array with clang++18 and vectors...
User time = 18.65 seconds (.31083 minutes) (.00518 hours).
RSS = 5372 KB

Sorting int array with g++14 and subscripts...
User time = 17.68 seconds (.29466 minutes) (.00491 hours).
RSS = 5268 KB

Sorting long array with g++14 and subscripts...
User time = 17.69 seconds (.29483 minutes) (.00491 hours).
RSS = 6064 KB

Sorting float array with g++14 and subscripts...
User time = 17.01 seconds (.28350 minutes) (.00472 hours).
RSS = 5280 KB

Sorting double array with g++14 and subscripts...
User time = 17.00 seconds (.28333 minutes) (.00472 hours).
RSS = 6068 KB

Sorting int array with g++14 and pointers...
User time = 16.92 seconds (.28200 minutes) (.00470 hours).
RSS = 5268 KB

Sorting long array with g++14 and pointers...
User time = 16.92 seconds (.28200 minutes) (.00470 hours).
RSS = 6060 KB

Sorting float array with g++14 and pointers...
User time = 21.39 seconds (.35650 minutes) (.00594 hours).
RSS = 5272 KB

Sorting double array with g++14 and pointers...
User time = 21.37 seconds (.35616 minutes) (.00593 hours).
RSS = 6068 KB

Sorting int array with g++14 and vectors...
User time = 16.92 seconds (.28200 minutes) (.00470 hours).
RSS = 5276 KB

Sorting long array with g++14 and vectors...
User time = 10.60 seconds (.17666 minutes) (.00294 hours).
RSS = 6064 KB

Sorting float array with g++14 and vectors...
User time = 17.79 seconds (.29650 minutes) (.00494 hours).
RSS = 5276 KB

Sorting double array with g++14 and vectors...
User time = 17.78 seconds (.29633 minutes) (.00493 hours).
RSS = 6076 KB

Sorting integer array with gfortran14 and subscripts...
User time = 19.95 seconds (.33250 minutes) (.00554 hours).
RSS = 7196 KB

Sorting real array with gfortran14 and subscripts...
User time = 19.60 seconds (.32666 minutes) (.00544 hours).
RSS = 7184 KB

Sorting real(8) array with gfortran14 and subscripts...
User time = 19.57 seconds (.32616 minutes) (.00543 hours).
RSS = 7968 KB

Sorting int array Pascal...
User time = 42.98 seconds (.71633 minutes) (.01193 hours).
RSS = 1844 KB

Sorting longint array with Pascal...
User time = 42.99 seconds (.71650 minutes) (.01194 hours).
RSS = 1844 KB

Sorting int array D...
User time = 30.52 seconds (.50866 minutes) (.00847 hours).
RSS = 5816 KB

Sorting i32 vector with Rust...
User time = 24.45 seconds (.40750 minutes) (.00679 hours).
RSS = 3936 KB

Sorting with Go...
User time = 31.36 seconds (.52266 minutes) (.00871 hours).
RSS = 14740 KB

Sorting with Python+numba...
User time = 44.32 seconds (.73866 minutes) (.01231 hours).
RSS = 197248 KB

Sorting with vectorized Python extrapolated...
User time = 733.00000 seconds (12.21666 minutes) (.20361 hours).
RSS = 12664 KB

Sorting with Python explicit loops extrapolated...
User time = 1250.00000 seconds (20.83333 minutes) (.34722 hours).
RSS = 12392 KB
/usr/local/bin/perl

Sorting with vectorized Perl extrapolated...
User time = 2043.25000 seconds (34.05416 minutes) (.56756 hours).
RSS = 12200 KB

Sorting with Perl explicit loops extrapolated...
User time = 2475.25000 seconds (41.25416 minutes) (.68756 hours).
RSS = 10000 KB
/usr/local/bin/R

Sorting with vectorized R...
User time = 99.19 seconds (1.65316 minutes) (.02755 hours).
RSS = 186348 KB

Sorting with R explicit loops extrapolated...
User time = 2533.75000 seconds (42.22916 minutes) (.70381 hours).
RSS = 78644 KB
/usr/local/bin/octave

Sorting with vectorized Octave...
User time = 33.87 seconds (.56450 minutes) (.00940 hours).
RSS = 115376 KB

Sorting with Octave explicit loops extrapolated...
User time = 67196.00000 seconds (1119.93333 minutes) (18.66555 hours).
RSS = 111580 KB
